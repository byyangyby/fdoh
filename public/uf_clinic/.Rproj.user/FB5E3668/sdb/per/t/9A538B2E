{
    "contents" : "library(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\n\n#####\n# DIRECTORY INFO\n#####\nif(Sys.info()['sysname'] == 'Windows'){\n  code_dir <- 'C:/Users/BrewJR/Documents/fdoh/public/uf_clinic/'\n  data_dir <- 'E:/fdoh/private/uf_clinic/'\n} else {\n  code_dir <- '/home/joebrew/Documents/fdoh/public/uf_clinic/'\n  data_dir <- '/media/joebrew/JB/fdoh/private/uf_clinic/'\n}\n\n#####\n# READ IN FDOH DATA\n#####\nfdoh <- read_excel(paste0(data_dir, '/ufSTI-data.xlsx'), \n                 skip = 3)\n\n#####\n# CLEAN UP THE TABULATION AT END\n#####\nfdoh <- fdoh[1:(nrow(fdoh)-16),]\n\n#####\n# GET RID OF THE MID-FILE HEADER ROWS AND THE RESULT DATE ROWS\n#####\nfdoh <- fdoh[which(!is.na(fdoh$Service) &\n                 fdoh$Client != 'Client'),]\n\n#####\n# MANUALLY CLEAN OUT THE JAIL AND ACHD TESTS\n#####\nfdoh <- fdoh[9:nrow(fdoh),]\n\n#####\n# MAKE NORMAL DATAFRAME OBJECT\n#####\nfdoh <- data.frame(fdoh)\n\n#####\n# DEAL WITH THE TERRIBLY FORMATTED DATES\n#####\nfix_date <- function(dates){\n  dates <- as.numeric(dates)\n  year <- substr(dates, nchar(dates)-1 ,nchar(dates))\n  day <- substr(dates, nchar(dates)-3 ,nchar(dates) -2)\n  month <- ifelse(nchar(dates) == 5,\n                  substr(dates,1,1),\n                  substr(dates,1,2))\n  new_dates <- paste0(year, '-', month, '-', day)\n  new_dates <- as.Date(new_dates, format = '%y-%m-%d')\n  return(new_dates)\n}\nfdoh$Client.DOB <- fix_date(fdoh$Client.DOB)\nfdoh$Coll <- fix_date(fdoh$Coll)\n\nfdoh$date <- fdoh$Coll\nfdoh$month <- as.numeric(format(fdoh$date, format = '%m'))\nfdoh$month_char <- format(fdoh$date, format = '%B')\nfdoh$year <- as.numeric(format(fdoh$date, format = '%Y'))\n\n#####\n# GET COUNTS BY MONTH\n#####\nts <- fdoh %>%\n  group_by(year, month) %>%\n  summarise(n = n())\nts$first_day_of_month <- as.Date(paste0(ts$year, '-', ts$month, '-', '01'))\nts$date_char <- paste0(ts$year, '-', ts$month, '-')\n\ngg <- ggplot(data = ts, aes(x = first_day_of_month,\n                            y = n))\ngg + \n  theme_bw() +\n  geom_area(fill = 'blue', alpha = 0.5) +\n  xlab('Date') +\n  ylab('Tests administered')\n\n#####\n# READ IN fdoh DATA\n#####\nsetwd(data_dir)\nuf <- read.csv('for_joe.csv')\n\n#####\n# CLEAN UP COLUMN NAMES AND SUCH\n#####\nuf$year <- paste0(ifelse(nchar(uf$visit.year) == 1,\n                         '200', '20'),\n                  uf$visit.year)\nmonths <- c('January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December')\nuf$month <- NA\nfor (i in 1:nrow(uf)){\n  uf$month[i] <-\n    which(months == uf$visit.month[i])\n}\nuf <- uf[,c('age', 'sex', 'diag', 'cases', 'year', 'month')]\n\n#####\n# GET ONLY THE VARIABLES WE'RE INTERESTED IN\n#####\n\n# Create vector of stis\nstis <- c('chlam|clam', \n          'gono|ghon|gonh',\n          'syphi|sypi',\n          'hpv|papillo|papilo',\n          'herpes',\n          'hiv|aids|immunodeficiency')\n\n\nnames(stis) <- c('chlamydia', 'gonorrhea', 'syphilis', 'hpv', 'herpes', 'hiv')\n\n# Make diag lowercase\nuf$diag <- tolower(uf$diag)\n\n# Create a new variable for each of the STI's in question\nfor (j in 1:length(stis)){\n  uf[,names(stis)[j]] <- NA\n}\n# Create a new variable for each of the STI's in question\nfor (j in 1:length(stis)){\n  # Extract the sti in question\n  sti <- stis[j]\n  # Get whether each row has that STI\n  new_var <- grepl(sti, uf$diag)\n  # Put the results into a new variable\n  uf[,names(stis)[j]] <- new_var\n}\n\n#####\n# GET UF TIME SERIES\n#####\nts_uf <- uf %>%\n  filter(age >= 18 & age <= 22) %>%\n  group_by(year, month) %>%\n  summarise(chlamydia = sum(cases[chlamydia]),\n            gonorrhea = sum(cases[gonorrhea]),\n            syphilis = sum(cases[syphilis]),\n            hpv = sum(cases[hpv]),\n            herpes = sum(cases[herpes]),\n            hiv = sum(cases[hiv]),\n            sti = sum(cases[chlamydia|gonorrhea|syphilis|hpv|herpes|hiv]))\n\nbarplot(ts_uf$sti, names.arg = paste0(ts_uf$year, '-', ts_uf$month), las = 3, cex.names = 0.3)\n\n##############################################\n##############################################\n##############################################\n##############################################\n##############################################\n\n#####\n# JOIN UF / FDOH DATA\n#####\nts_uf$year <- as.numeric(ts_uf$year)\nts <- left_join(x = ts_uf, y = ts)\n\n# Fix a column name\nts$n_tests <- ts$n\nts <- ts[,which(colnames(ts) != 'n')]\n\n# Save an image\nsetwd(data_dir)\nsave.image('checkpoint.RData')\n",
    "created" : 1435763435481.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "3701421485",
    "id" : "9A538B2E",
    "lastKnownWriteTime" : 1435763453,
    "path" : "~/fdoh/public/uf_clinic/code.R",
    "project_path" : "code.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}